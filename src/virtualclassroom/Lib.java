/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package virtualclassroom;

import models.Constants;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import port_channel.ChannelPort;
import models.ClassroomMessage;
import java.awt.event.KeyEvent;

/**
 *
 * @author Dragon
 */
public class Lib extends javax.swing.JFrame {
    ChannelPort channelPort;
    
    
    
    DefaultListModel<ClassroomMessage> chatHistoryModel = new DefaultListModel<ClassroomMessage>();
    DefaultListModel<String> StudentModel = new DefaultListModel<String>();
  //  DefaultListModel<String> HandUpModel = new DefaultListModel<String>();

    /**
     * Creates new form Teacher
     */
    public Lib() {
        initComponents();
        
        btnApproval.setEnabled(false);
        
        channelPort = new ChannelPort(Constants.PORT);
        
        channelPort.initialize();
        
        lstChatHistory.setModel(chatHistoryModel);
        lstStudents.setModel(StudentModel);
    lstHandUp.setModel(HandUpModel);
        
        
        Thread t = new Thread(new Runnable() {

            @Override
            public void run() {
                while (true) {
                    ClassroomMessage msgReceived = channelPort.receive();
                    
                    if (msgReceived.getType().equals(Constants.MSG_TYPE_LOGIN)) {
                        addStudent(msgReceived);
                    }
                    else if (msgReceived.getType().equals(Constants.MSG_TYPE_LOGOUT)) {
                        removeStudent(msgReceived);
                    }
                    else {
          //              if (msgReceived.getType().equals(Constants.MSG_TYPE_HANGUP)) {
                            addHandUp(msgReceived);
                        }
                        
                        channelPort.broadcast(msgReceived);
                    }
                    
    //                addChatHistory(msgReceived);
                    
        /**            try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Lib.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
    //        }
            
        });
        
        t.start();
    }
    
    public synchronized void addChatHistory(ClassroomMessage msg) {
        chatHistoryModel.addElement(msg);
        
        boolean empty = HandUpModel.isEmpty();
        btnApproval.setEnabled(!empty);
    }
    
    public synchronized void addStudent(ClassroomMessage msg) {
        StudentModel.addElement(msg.getPersonId());
    }
    
    public synchronized void removeStudent(ClassroomMessage msg) {
        StudentModel.removeElement(msg.getPersonId());
    }
    
    public synchronized void addHandUp(ClassroomMessage msg) {
        if (!HandUpModel.contains(msg.getPersonId()))
            HandUpModel.addElement(msg.getPersonId());
    }
    
    public void sendText() {
        long timestamp = System.currentTimeMillis();
        String st = txtSend.getText();
        
        if (!st.isEmpty()) {
            ClassroomMessage msg = new ClassroomMessage(Constants.TEACHER_ID, timestamp, Constants.MSG_TYPE_SPEAK, st);
            addChatHistory(msg);
            channelPort.broadcast(msg);
        }**/
        
        txtSend.setText("");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstChatHistory = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstStudents = new javax.swing.JList();
        txtSend = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        btnApproval = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
  //      lstHandUp = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teacher");

        lstChatHistory.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstChatHistory);

        lstStudents.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstStudents);

        txtSend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSendKeyPressed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnApproval.setText("Approval");
        btnApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApprovalActionPerformed(evt);
            }
        });

  /**      lstHandUp.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }**/
      //  });
    // jScrollPane3.setViewportView(lstHandUp);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtSend, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnApproval, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApproval)
                    .addComponent(btnSend)
                    .addComponent(txtSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        sendText();
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApprovalActionPerformed
        long timestamp = System.currentTimeMillis();
        
       // int selIndex = lstHandUp.getSelectedIndex();
   //     if (selIndex == -1)
            return;
        
   //     String st = HandUpModel.getElementAt(selIndex);
        
    //    int index = StudentModel.indexOf(st);
        
        
   //     ClassroomMessage msg = new ClassroomMessage(Constants.TEACHER_ID, timestamp, Constants.MSG_TYPE_APPROVAL, Constants.MSG_DEFAULT_CONTENTS);
     //   addChatHistory(msg);
   //     channelPort.send(index, msg);
        
  //      HandUpModel.clear();
    }//GEN-LAST:event_btnApprovalActionPerformed

    private void txtSendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSendKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sendText();
        }
    }//GEN-LAST:event_txtSendKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Lib us = new Lib();
                Dimension di = Toolkit.getDefaultToolkit().getScreenSize();
                us.setLocation(di.width / 2 - us.getWidth() / 2, di.height / 2 - us.getHeight() / 2);
                us.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproval;
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList lstChatHistory;
    //private javax.swing.JList lstHandUp;
    private javax.swing.JList lstStudents;
    private javax.swing.JTextField txtSend;
    // End of variables declaration//GEN-END:variables
}
