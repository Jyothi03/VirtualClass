/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package virtualclassroom;

import models.Constants;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import port_channel.ChannelEndPoint;
import models.ClassroomMessage;
import java.awt.event.KeyEvent;


public class Student extends javax.swing.JFrame {
    static String nodeId = "";
    
    ChannelEndPoint channelEndPoint;
    DefaultListModel<ClassroomMessage> chatHistoryModel = new DefaultListModel<ClassroomMessage>();
    
    boolean connected = false;
    boolean sendable = false;
    
    /**
     * Creates new form Student
     */
    public Student() {
        
        
        String s = (String)JOptionPane.showInputDialog(
            this,
            "Your ID:",
            "Input ID",
            JOptionPane.PLAIN_MESSAGE,
            null,
            null,
            "Student-1");

        //If a string was returned, say so.
        if (s == null || s.isEmpty()) {
            return;
        }

        nodeId = s;
        initComponents();
        updateUI(sendable);
        
        lstChatHistory.setModel(chatHistoryModel);
        
        channelEndPoint = new ChannelEndPoint(nodeId, Constants.SERVERIP, Constants.PORT);
        
        Thread t = new Thread(new Runnable() {

            @Override
            public void run() {
                channelEndPoint.initialize();
                
                connected = true;
                
                long timestamp = System.currentTimeMillis();
                ClassroomMessage msg = new ClassroomMessage(nodeId, timestamp, Constants.MSG_TYPE_LOGIN, Constants.MSG_DEFAULT_CONTENTS);
                channelEndPoint.send(msg);
                
                while (true) {
                    ClassroomMessage msgReceived = (ClassroomMessage)channelEndPoint.receive();
                    
                    addChatHistory(msgReceived);
                    
                    filter(msgReceived);
                    
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Lib.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            
        });
        
        t.start();
    }
    
    
    public synchronized void addChatHistory(ClassroomMessage msg) {
        chatHistoryModel.addElement(msg);
    }
    
    
    public synchronized void filter(ClassroomMessage msg) {
  //      if (msg.getType().equals(Constants.MSG_TYPE_APPROVAL)) {
            sendable = true;
        }

   //     updateUI(sendable);
 //   }
    
    public synchronized void send(ClassroomMessage msg) {
        channelEndPoint.send(msg);
        
        sendable = false;
        
        updateUI(sendable);
    }
    
    public void updateUI(boolean enable) {
        txtSend.setEnabled(enable);
        btnSend.setEnabled(enable);
        btnHandUp.setEnabled(!enable);
    }
    
    public void sendText() {
        long timestamp = System.currentTimeMillis();
        String st = txtSend.getText();

        if (!st.isEmpty()) {
            ClassroomMessage msg = new ClassroomMessage(nodeId, timestamp, Constants.MSG_TYPE_SPEAK, st);
            send(msg);
        }

        txtSend.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstChatHistory = new javax.swing.JList();
        txtSend = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        btnHandUp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(nodeId);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lstChatHistory.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstChatHistory);

        txtSend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSendKeyPressed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

       btnHandUp.setText("Hand Up");
        btnHandUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHandUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHandUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSend, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSend)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(264, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHandUp)
                    .addComponent(txtSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addGap(45, 45, 45)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        sendText();
    }//GEN-LAST:event_btnSendActionPerformed
    
    private void btnHandUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHandUpActionPerformed
        if (connected == false)
            return;
        
        long timestamp = System.currentTimeMillis();
     //   ClassroomMessage msg = new ClassroomMessage(nodeId, timestamp, Constants.MSG_TYPE_HANGUP, Constants.MSG_DEFAULT_CONTENTS);
   //     send(msg);
    }//GEN-LAST:event_btnHandUpActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        channelEndPoint.close();
    }//GEN-LAST:event_formWindowClosing

    private void txtSendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSendKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sendText();
        }
    }//GEN-LAST:event_txtSendKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Student us = new Student();
                
                Dimension di = Toolkit.getDefaultToolkit().getScreenSize();
                us.setLocation(di.width / 2 - us.getWidth() / 2, di.height / 2 - us.getHeight() / 2);
                us.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHandUp;
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstChatHistory;
    private javax.swing.JTextField txtSend;
    // End of variables declaration//GEN-END:variables
}
